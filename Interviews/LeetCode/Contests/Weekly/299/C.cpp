
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;



class Solution {
public:
    int maximumsSplicedArray(vector<int>& nums1, vector<int>& nums2) {
        vector<int> newArr;
        int sum1 = 0, sum2 = 0, n = nums1.size();
        for(int i = 0; i < n; i++) sum1 += nums1[i], sum2 += nums2[i];
        for(int i = 0; i < n; i++) newArr.push_back(nums1[i] - nums2[i]);

        int maxSum = 0, curSum = 0;
    	for(int i = 0; i < n; i++){
    		curSum += newArr[i];
    		maxSum = max(maxSum, curSum);
    		if(curSum < 0) curSum = 0;
    	}

    	int ans = sum2 + maxSum;
    	newArr.clear();
    	for(int i = 0; i < n; i++) newArr.push_back(nums2[i] - nums1[i]), sum2 += nums2[i];

        maxSum = 0, curSum = 0;
    	for(int i = 0; i < n; i++){
    		curSum += newArr[i];
    		maxSum = max(maxSum, curSum);
    		if(curSum < 0) curSum = 0;
    	}
    	ans = max(ans, sum1 + maxSum);
    	return ans;
    }
};


int main() {

  
  	Solution leetcode2IDE;
	vector<int> nums11 = {60,60,60};
	vector<int> nums21 = {10,90,10};
	int output_1 = 210;
	if(leetcode2IDE.maximumsSplicedArray(nums11,nums21)==output_1){
		cout << "Sample #1 : Accepted" << endl;
	}else{
		cout << "Sample #1 : Wrong Answer" << endl;
	}

	vector<int> nums12 = {20,40,20,70,30};
	vector<int> nums22 = {50,20,50,40,20};
	int output_2 = 220;
	if(leetcode2IDE.maximumsSplicedArray(nums12,nums22)==output_2){
		cout << "Sample #2 : Accepted" << endl;
	}else{
		cout << "Sample #2 : Wrong Answer" << endl;
	}

	vector<int> nums13 = {7,11,13};
	vector<int> nums23 = {1,1,1};
	int output_3 = 31;
	if(leetcode2IDE.maximumsSplicedArray(nums13,nums23)==output_3){
		cout << "Sample #3 : Accepted" << endl;
	}else{
		cout << "Sample #3 : Wrong Answer" << endl;
	}

	


  return 0;
}
